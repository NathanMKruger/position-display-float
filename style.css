.parent-container {
    background-color: beige;
    border: 2px solid black;
    width: 75vw;
    height: 175vh;
    padding: 5px;
    font-family: Arial, Helvetica, sans-serif;

    /* position: relative; */
    /* causes absolute container to position inside parent container */
}

.child {
    padding: 25px;
}

/* STATIC */
.static {
    border: 2px solid red;
    background-color: red;
    /* top, bottom, left, right, z-index properties have NO EFFECT */
}

/* RELATIVE */
.relative {
    border: 2px solid blueviolet;
    background-color: blueviolet;

    /* position: relative; */
    top: 25px;
    left: 25px;

    /* by default acts like static */
    /* can use t, b, l, r to take the element out of document flow */
    /* DO NOT USE IT if you can avoid it! It's too manual */
}

/* ABSOLUTE */
.absolute {
    border: 2px solid green;
    background-color: green;

    /* position: absolute; */
    /* takes element out of flow */
    top: 0;
    /* relative to root that's NOT static */
    /* used for absolutely positioning children */
}

/* FIXED */
.fixed {
    border: 2px solid teal;
    background-color: teal;

    /* position: fixed; */
    top: 0;
    /* ignores parent */
    /* based on ENTIRE viewport */
    /* absolute on parent relative will scroll */
    /* Fixed WILL NOT scroll away */
}

/* STICKY */
.sticky {
    border: 2px solid gray;
    background-color: gray;

    position: sticky;
    top: 75px;

    /* Acts like a combination of fixed and absolute */
    /* stays fixed once scroll occurs */
    /* it's relative by default (doesn't move out of normal flow */
}